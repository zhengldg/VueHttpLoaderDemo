@{
}
<div class="layui-form pd010"  ng-controller="indexCtrl as vm">
    <div class="layui-row  layui-col-space10">
        <div class="layui-col-md2"  style="padding-top:15px;">
            <dropdown-list id="SSXT" style="width:100%" url='@(Url.Action("GetSystemDropDownList","System", new { area = "Rms"}))' textField="name" valueField="id" ng-model="vm.search.SSXT" defaultFirst="true"></dropdown-list>
            <ul id="tree" class="ztree" style="overflow-y:auto;"></ul>
        </div>
        <div class="layui-col-md6">
            <div class="layui-row" lay-filter="form1" id="">
                <div class="layui-form data-sethead">
                    <div class="layui-inline">
                        <input type="text" style="width:200px" placeholder="请输入配置名称" class="layui-input" ng-model="vm.search.Filter">
                    </div>
                    <button class="layui-btn layui-btn-sm layui-btn-green " ng-click="vm.searchTable()">搜索</button>
                    <button class="layui-btn  layui-btn-sm layui-btn-normal" ng-click="vm.add()">新增</button>
                    <button class="layui-btn layui-btn-sm layui-btn-primary " ng-click="vm.clearCache()">清空缓存</button>
                </div>
                <table id="grid" lay-filter="grid"></table>
            </div>
        </div>
        <div class="layui-col-md4">
            <div class="layui-form">
                <div class="grid-infor">
                    <div class="data-sethead fr">
                        <button class="layui-btn layui-btn-sm layui-btn-normal" lay-filter="form1" ng-click="vm.save()">保存</button>
                        <button class="layui-btn   layui-btn-sm layui-btn-primary" onclick="parent.layer.closeAll()">取消</button>
                    </div>
                    <table>
                        <tr>
                            <td>
                                <span class="red">*</span>配置名称
                            </td>
                            <td>
                                <input type="text" ng-model="vm.entity.Name" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="red">*</span>配置KEY
                            </td>
                            <td>
                                <input type="text" ng-model="vm.entity.Key" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="red">*</span>数据类型
                            </td>
                            <td>
                                <dropdown-list ng-disabled="true" id="DataType" url="@(Url.Action("GetGgdmz","Tool",new { area="", DMJBH = "SJLX" }))" textField="text" valueField="id" ng-model="vm.entity.DataType"></dropdown-list>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="red">*</span>配置值
                            </td>
                            <td>
                                <input type="text" ng-model="vm.entity.Value" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="red">*</span>父配置
                            </td>
                            <td>
                                <dropdown-list  id="ParentId" url='@(Url.Action("GetSystemConfigTree","SystemConfig"))' textField="name" valueField="id" ng-model="vm.entity.ParentId"></dropdown-list>
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="red">*</span>排序号
                            </td>
                            <td>
                                <input type="text" ng-model="vm.entity.SortId" lay-verify="required|number" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                            </td>
                        </tr>
                        <tr>
                            <td>
                                <span class="red">*</span>是否有效
                            </td>
                            <td>
                                <radio-list id="Enable" lay-verify="radio" url="@(Url.Action("GetGgdmz","Tool",new { area="", DMJBH = "SFYX" }))" textField="text" valueField="id" ng-model="vm.entity.Enable"></radio-list>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
@section script{
    <script>
        window.onload = window.onresize = function () {
            $('#tree').height($(window).height() - 62);
        }

        var url = "@Url.Action("GetSystemConfigList")";
        var userUrl = "@Url.Action("GetUser", "User")";

        angular.module("app.rms")
            .controller("indexCtrl", ["$scope", "pdActionSvr", "pdResourceSvr", "$rootScope", "pdTableSvr", function ($scope, pdActionSvr, pdResourceSvr, $rootScope, pdTableSvr) {
                var vm = this;
                vm.eventClick = function () {

                }
                vm.search = {
                    Filter: "",
                    SSXT: '',
                    ParentId: ''
                };
                vm.entity = {};

                vm.treeSearch = null, table = {};
                var allTreeNode = [];

                vm.searchUser = function () {
                    table = pdTableSvr.render({
                        elem: '#grid',
                        url: url,
                        where: vm.search,
                        cols: [[
                            { type: 'numbers', title: '序号', width: "8%" },
                            { field: 'Name', title: '配置名称', width: "20%" },
                            { field: 'Value', title: '配置值', width: "35%" },
                            {
                                field: 'Enable', title: '状态', width: "15%", templet: function (record) {
                                    if (record.Enable == 1) {
                                        return '有效';
                                    } else {
                                        return '无效';
                                    }
                                }
                            },
                            { title: '操作', fixed: 'right', align: 'center', toolbar: '#barDemo' }
                        ]]
                    });

                    layui.table.on('tool(grid)', function (obj) {
                        var xh = obj.data.Id;
                        if (obj.event === 'edit') {
                            pdResourceSvr.get('@Url.Action("GetSystemConfig")/' + xh)
                                .then(function (rsp) {
                                    vm.entity = rsp;
                                })
                                .finally(function () {
                                })
                        }
                        else if (obj.event === 'del') {
                            top.layer.confirm('确定删除么', function (index) {
                                pdResourceSvr.get('@Url.Action("Delete")/' + xh)
                                    .then(function (rsp) {
                                        if (rsp.Result) {
                                            obj.del();
                                            pdActionSvr.success('删除成功');
                                            reload();
                                        } else {
                                            pdActionSvr.error('删除失败');
                                        }
                                    })
                                    .finally(function () {
                                        top.layer.close(index);
                                    })
                            });
                        }
                    });
                }

                vm.add = function () {
                    vm.entity.ParentId = vm.search.ParentId;
                    vm.entity.SystemId = vm.search.SSXT;
                    console.log(vm.entity);
                };

                $scope.$watch('vm.search.SSXT', function (newVal) {
                    vm.initTree();
                })


                function onClickTreeNode(event, treeId, treeNode) {
                    vm.search.ParentId = treeNode.id;
                    vm.searchUser();
                }

                var treeObj = {};
                vm.initTree = function () {
                    var isFirst = true;
                    var setting = {
                        async: {
                            enable: true,
                            url: '@Url.Action("GetSystemConfigTree","SystemConfig")?systemId=' + vm.search.SSXT,
                        },
                        callback: {
                            onClick: onClickTreeNode,
                            onAsyncSuccess: function (event, treeId, treeNode, msg) {
                                if (isFirst) {
                                    var node = treeObj.getNodes();
                                    if (node && node.length) {
                                        node = node[0];
                                        treeObj.selectNode(node);
                                        onClickTreeNode(null, node.id, node);
                                        isFirst = false;
                                    }
                                }
                            }
                        },
                        data: {
                            simpleData: {
                                enable: true,
                                idKey: "id",
                                pIdKey: "pId",
                                rootPId: null
                            }
                        }
                    };
                    treeObj = $.fn.zTree.init($("#tree"), setting);
                }

                vm.searchTable = function () {
                    table.reload({
                        where: vm.search,
                        page: true
                    });
                }

                vm.init = function () {
                    vm.initTree();
                }

                reload = function () {
                    table.reload()
                }

                vm.save = function () {
                    pdResourceSvr.post('@Url.Action("Save")', vm.entity)
                        .then(function (rsp) {
                            if (rsp.Result == "1") {
                                pdActionSvr.success('保存成功', '提示');
                                reload();
                            } else {
                                pdActionSvr.error(rsp.message || '保存失败');
                            }
                        });
                }

                vm.clearCache = function () {
                    pdResourceSvr.post('@Url.Action("ClearCache")', vm.entity)
                        .then(function (rsp) {
                            if (rsp) {
                                pdActionSvr.success('清空成功', '提示');
                            } else {
                            }
                        });
                }

                vm.init();
            }]);
    </script>
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
}
