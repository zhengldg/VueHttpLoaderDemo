@{
    var id = ViewContext.RouteData.Values["id"];
}
<div class="pd010 layui-form" ng-controller="indexCtrl as vm" ng-cloak>
    <div class="grid-infor">
        <table>
            <tr>
                <td>
                    <input type="hidden" ng-model="vm.entity.XH" />
                    <span class="red">*</span>编号名称
                </td>
                <td>
                    <input type="text" ng-model="vm.entity.BHMC" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
            <tr>
                <td>
                    前缀格式
                </td>
                <td>
                    <button ng-click="vm.showPrefix('orgid')">机构代码</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('year')">年</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('month')">月</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('date')">日</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('hour')">时</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('min')">分</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('second')">秒</button>
                    <button style="margin-left:5px;" ng-click="vm.showPrefix('ms')">毫秒</button>
                    <br />
                    <input type="text" ng-model="vm.entity.QZGS" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
            <tr>
                <td>
                    后缀格式
                </td>
                <td>
                    <button ng-click="vm.showPostfix('orgid')">机构代码</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('year')">年</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('month')">月</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('date')">日</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('hour')">时</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('min')">分</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('second')">秒</button>
                    <button style="margin-left:5px;" ng-click="vm.showPostfix('ms')">毫秒</button>
                    <br />
                    <input type="text" ng-model="vm.entity.HZGS" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
            <tr>
                <td>
                    流水号格式
                </td>
                <td>
                    <input type="text" ng-model="vm.entity.LSHGS" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
            <tr>
                <td>
                    <span class="red">*</span>最小值
                </td>
                <td>
                    <input type="text" ng-model="vm.entity.ZXZ" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
            <tr>
                <td>
                    <span class="red">*</span>最大值
                </td>
                <td>
                    <input type="text" ng-model="vm.entity.ZDZ" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
            <tr>
                <td>
                    备注
                </td>
                <td>
                    <input type="text" ng-model="vm.entity.BZ" placeholder="请输入" autocomplete="off" class="layui-input" maxlength="50">
                </td>
            </tr>
        </table>
    </div>
</div>
<div class="foot-btnp">
    <button class="layui-btn layui-btn-sm layui-btn-normal" lay-filter="form1" lay-submit>保存</button>
    <button class="layui-btn   layui-btn-sm layui-btn-primary" onclick="parent.layer.closeAll()">取消</button>
</div>




@section script
{
    <script type="text/javascript">
        var id = '@id';
        console.log(id);
        angular.module("app.ydyd")
            .controller("indexCtrl", ["$scope", "pdActionSvr", "pdResourceSvr", function ($scope, pdActionSvr, pdResourceSvr) {
                var edit = id == "" ? false : true;
                var addOrEditUrl = '@Url.Action("AddOrEdit")?edit=' + edit;

                var vm = this;
                vm.entity = { };
                vm.filter = { sortfield: 'xh', KEY: '' };
                vm.save = function () {
                    console.log(addOrEditUrl);
                    pdResourceSvr.post(addOrEditUrl, vm.entity)
                        .then(function (rsp) {
                            if (rsp.Result) {
                                pdActionSvr.success('保存成功', '提示');
                                vm.isEdit = true;
                            } else {
                                pdActionSvr.error(rsp.message || '保存失败');
                            }
                        });
                }

                vm.init = function () {
                    if (id) {
                        vm.isEdit = true;
                        pdResourceSvr.get('@Url.Action("Get")?id=' + id)
                            .then(function (rsp) {
                                console.log(rsp);
                                vm.entity = rsp || {};
                            });
                    }
                }

                vm.init();

                //监听提交
                layui.form.on('submit(form1)', function (data) {
                    vm.save();
                });

                vm.showPrefix = function (pre) {
                    if (typeof ($scope.vm.entity.QZGS) == "undefined" || $scope.vm.entity.QZGS == null) {
                        $scope.vm.entity.QZGS = "";
                    }
                    switch (pre) {
                        case 'year': $scope.vm.entity.QZGS += '#YEAR#'; break;
                        case 'month': $scope.vm.entity.QZGS += '#MONTH#'; break;
                        case 'date': $scope.vm.entity.QZGS += '#DATE#'; break;
                        case 'hour': $scope.vm.entity.QZGS += '#HOUR#'; break;
                        case 'min': $scope.vm.entity.QZGS += '#MINUTE#'; break;
                        case 'second':$scope.vm.entity.QZGS += '#SECOND#'; break
                        case 'ms': $scope.vm.entity.QZGS += '#MS#'; break;
                        case 'orgid': $scope.vm.entity.QZGS += '#ORGID#'; break;
                    }
                }
                vm.showPostfix = function (pos) {
                    if (typeof ($scope.vm.entity.HZGS) == "undefined" || $scope.vm.entity.HZGS == null) {
                        $scope.vm.entity.HZGS = "";
                    }
                    switch (pos) {
                        case 'year': $scope.vm.entity.HZGS += '#YEAR#'; break;
                        case 'month': $scope.vm.entity.HZGS += '#MONTH#'; break;
                        case 'date': $scope.vm.entity.HZGS += '#DATE#'; break;
                        case 'hour': $scope.vm.entity.HZGS += '#HOUR#'; break;
                        case 'min': $scope.vm.entity.HZGS += '#MINUTE#'; break;
                        case 'second': $scope.vm.entity.HZGS += '#SECOND#'; break
                        case 'ms': $scope.vm.entity.HZGS += '#MS#'; break;
                        case 'orgid':$scope.vm.entity.HZGS += '#ORGID#'; break;
                    }
                }


            }]);











    @*mini.parse();
    var form = new mini.Form("editform");
    function showPrefix(pre) {
        var qzgs = mini.get("QZGS");
        switch (pre) {
            case 'year': qzgs.setValue(qzgs.getValue() + '#YEAR#'); break;
            case 'month': qzgs.setValue(qzgs.getValue() + '#MONTH#'); break;
            case 'date': qzgs.setValue(qzgs.getValue() +'#DATE#'); break;
            case 'hour': qzgs.setValue(qzgs.getValue() + '#HOUR#'); break;
            case 'min': qzgs.setValue(qzgs.getValue() + '#MINUTE#'); break;
            case 'second': qzgs.setValue(qzgs.getValue() + '#SECOND#'); break
            case 'ms': qzgs.setValue(qzgs.getValue() + '#MS#'); break;
            case 'orgid': qzgs.setValue(qzgs.getValue() + '#ORGID#'); break;
        }
    }

    function showPostfix(pos) {
        var hzgs = mini.get("HZGS");
        switch (pos) {
            case 'year': hzgs.setValue(hzgs.getValue() + '#YEAR#'); break;
            case 'month': hzgs.setValue(hzgs.getValue() + '#MONTH#'); break;
            case 'date': hzgs.setValue(hzgs.getValue() + '#DATE#'); break;
            case 'hour': hzgs.setValue(hzgs.getValue() + '#HOUR#'); break;
            case 'min': hzgs.setValue(hzgs.getValue() + '#MINUTE#'); break;
            case 'second': hzgs.setValue(hzgs.getValue() + '#SECOND#'); break
            case 'ms': hzgs.setValue(hzgs.getValue() + '#MS#'); break;
            case 'orgid': hzgs.setValue(hzgs.getValue() + '#ORGID#'); break;
        }
    }
        function SaveData() {
        if (!mini.validateForm(form)) return false;
        var formData = form.getData();
        var url = "";
        var XH = mini.get("SXBH").getValue();
        if (XH) {
            url = '@Url.Action("AddOrEdit")?edit=true';
        } else {
            url = '@Url.Action("AddOrEdit")?edit=false';
        }
        $$.ui.setBusy(null,
            $$.ajax({
                url: url,
                type: 'POST',
                data: JSON.stringify(formData)
            }).done(function (data) {
                if (data.Result == "1") {
                    $$.notify.success("保存成功");
                    window.CloseOwnerWindow("ok");
                }
                else
                    $$.notify.error(data.Message);
            })
                .always(function () {
                    $$.ui.clearBusy(null);
                })
        );
    }

        function onMinValueValidation(e) {
            if (!e.value) return true;
            debugger;
            if (e.isValid) {
                if (e.value >= mini.get("ZDZ").value) {
                    e.errorText = "最小值必须小于最大值";
                    e.isValid = false;
                }
            }

        }*@
    </script>
}