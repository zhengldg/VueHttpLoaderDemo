@{
}
@section style{
    <style type="text/css">
        #right input[type=checkbox] {
            margin: 3px 0 3px 5px;
            vertical-align: middle;
        }

        .items-title {
            line-height: 30px;
            color: #333;
            margin-left: 10px;
        }

        .items {
            margin-left: 20px;
            line-height: 20px;
            color: #666;
        }

        .parent {
            margin-left: 20px;
            line-height: 30px;
            border-bottom: 1px solid #d0d0d0;
        }

        .sub {
        }

        .sub1 {
            margin-left: 20px;
        }

        .sub2 {
            margin-left: 30px;
        }
    </style>
}
<div class="pd010" ng-controller="indexCtrl as vm">
    <div class="layui-row layui-col-space10">
        <div class="layui-col-md2 layui-form" style="margin-top:10px;">
            <dropdown-list id="SSXT" style="width:100%" url='@(Url.Action("GetSystemDropDownList","System"))' textField="name" valueField="id" ng-model="vm.search.SSXT" defaultFirst="true"></dropdown-list>
            <ul id="tree" class="ztree" style="overflow-y:auto; "></ul>
        </div>
        <div class="layui-col-md10">
            <div class="data-sethead fr">
                <button class="layui-btn layui-btn-sm layui-btn-normal" lay-filter="form1" ng-click="vm.save()">保存</button>
            </div>
            <div class="layui-row">
                <div class="layui-col-md12" id="right">
                    <div id="divRoot" style="background: #508dd0;color: #ffffff;font-weight: bold;line-height: 22px;height: 25px;border-bottom: 1px solid #365d86;">
                    </div>
                    <div id="divMenuTree" style="overflow-y:auto;"></div>
                </div>
            </div>
        </div>
    </div>
</div>
@section script{
    <script>
        window.onload = window.onresize = function () {
            $('#tree').height($(window).height()-63);
            $('#divMenuTree').height($(window).height()-88);
        }

        angular.module("app.rms")
            .controller("indexCtrl", ["$scope", "pdActionSvr", "pdResourceSvr", "$rootScope", function ($scope, pdActionSvr, pdResourceSvr, $rootScope) {
                var vm = this;

                var $fr = $('#fr');

                vm.search = {
                    Name: "",
                    JSBH: null,
                };

                vm.treeSearch = null, table = {};
                var allTreeNode = [];

                $scope.$watch('vm.search.SSXT', function (newVal) {
                    refreshIFrame();
                })
                //$scope.$watch('vm.search.JSBH', function (newVal) {
                //    refreshIFrame();
                //})

                function refreshIFrame() {
                    if (vm.search.JSBH && vm.search.SSXT) {
                        pdResourceSvr.post('@Url.Action("GetMenus", "Permission")', { JSBH: vm.search.JSBH, systemId: vm.search.SSXT })
                            .then(function (data) {
                                $("#divMenuTree").html(data.menuTree);
                                $("#divRoot").html("<input id=\"xt_root\" name=\"xt_root\"  value=\"" + data.rootMenu.XH + "\" nodeid=\"" + data.rootMenu.XH + "\" type=\"checkbox\"/>" + data.rootMenu.CDMC);
                                initMenuRoleTree();
                                initRight();
                            })
                    } else {
                        $("#divMenuTree").html("");
                    }
                }

                function onClickTreeNode(event, treeId, treeNode) {
                    vm.search.JSBH = treeNode.id;
                }
                var treeObj = {};
                vm.initTree = function () {
                    var isFirst = true;
                    var setting = {
                        async: {
                            enable: true,
                            url: '@Url.Action("GetRoleTree","Role")',
                        },
                        callback: {
                            onClick: function (event, treeId, treeNode) {
                                vm.search.JSBH = treeNode.id;
                                refreshIFrame();
                            },
                            onAsyncSuccess: function (event, treeId, treeNode, msg) {
                                if (isFirst) {
                                    var node = treeObj.getNodes();
                                    if (node && node.length) {
                                        node = node[0];
                                        treeObj.selectNode(node);
                                        onClickTreeNode(null, node.id, node);
                                        isFirst = false;
                                    }
                                }
                            }
                        },
                        data: {
                            simpleData: {
                                enable: true,
                                idKey: "id",
                                pIdKey: "pId",
                                rootPId: null
                            }
                        }
                    };
                    treeObj = $.fn.zTree.init($("#tree"), setting);
                }

                vm.searchTable = function () {
                    table.reload({
                        where: vm.search,
                        page: true
                    });
                }

                vm.init = function () {
                    vm.initTree();
                }

                vm.init();

                vm.save = function (json) {
                    if (json == null || json.length == 0) {
                        json = getMenuRoleJson();
                    }

                    if (!vm.search.JSBH) {
                        pdActionSvr.error("请选择角色", 1000);
                    }
                    pdResourceSvr.post('@Url.Action("Save")', { menus: json, roleId: vm.search.JSBH, systemId: vm.search.SSXT })
                        .then(function (text) {
                            if (text.Result ) {
                                //loadMenus();
                                pdActionSvr.success("保存成功！");
                            } else {
                                pdActionSvr.error("保存失败！");
                            }
                        }).catch(function () {
                            pdActionSvr.error("保存失败！");
                        })
                }

                checkedFuncton = function (node, selected) {
                    $("input[fNodeId=" + node + "] ").each(function () {
                        this.checked = selected;
                        //$(this).attr("checked", selected);
                        checkedFuncton($(this).attr("nodeId"), selected);
                    });
                    //$("input[tId=" + node + "]").attr("checked", selected);
                    $("input[tId=" + node + "]").each(function () {
                        this.checked = selected;
                    });
                }

                checkedPrevFuncton = function (fNode, selected) {
                    $("input[nodeId=" + fNode + "]").each(function () {
                        this.checked = selected;
                        //$(this).attr("checked", selected);
                        //                $("input[tId=" + fNode + "]").attr("checked", selected);
                        checkedPrevFuncton($(this).attr("fNodeId"), selected);
                    });
                }

                checkedNextFuncton = function (fNode, selected) {
                    var isHaveSelected = false;
                    $("input[fNodeId=" + fNode + "]").each(function () {
                        if ($(this).is(':checked')) {
                            isHaveSelected = true;
                        }
                    });
                    if (!isHaveSelected) {
                        $("input[nodeId=" + fNode + "]").each(function () {
                            this.checked = selected;
                            //$(this).attr("checked", selected);
                            // $("input[tId=" + fNode + "]").attr("checked", selected);
                            $("input[tId=" + fNode + "]").each(function () {
                                this.checked = selected;
                            });
                            checkedNextFuncton($(this).attr("fNodeId"), selected);
                        });
                    }
                }

                initRight = function () {
                    $("input[type=checkbox][tType=ALL]").on("click", function () {
                        var jsbh = vm.search.JSBH;

                        if (jsbh == null || jsbh.length == 0) {
                            pdActionSvr.error("请先选择角色！");
                            return;
                        }
                        var isSelected = $(this).is(':checked');
                        checkedFuncton($(this).attr("nodeId"), isSelected);
                        if (isSelected) {
                            checkedPrevFuncton($(this).attr("fNodeId"), isSelected);
                        } else {
                            checkedNextFuncton($(this).attr("fNodeId"), isSelected);
                        }
                    });

                    $("input[type=checkbox][tType=ALL]").each(function () {
                        $(this).parent().find("input[tId=" + $(this).attr("nodeId") + "]").on("click", function () {
                            var count = $(this).parent().find("input[tId='" + $(this).attr("tId") + "']:checked").length;
                            if (count)
                                checkedPrevFuncton($(this).attr("tId"), true);
                            else {
                                checkedNextFuncton($(this).attr("tId"), false);
                            }
                        });
                    });
                }

                getMenuRoleJson = function () {
                    var CheckList = '';
                    $("input[nodeId]").each(function () {
                        var cdxh = $(this).attr("nodeId");
                        var havePower = false;
                        $(this).parent().find("input[tId=" + cdxh + "]").each(function () {
                            if ($(this).is(':checked')) {
                                havePower = true;
                            }
                        });
                        if ($(this).is(':checked') || havePower) {
                            var SAVEPOWER = $("input[tType=SAVEPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            var UPDATEPOWER = $("input[tType=UPDATEPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            var DELETEPOWER = $("input[tType=DELETEPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            var PRINTPOWER = $("input[tType=PRINTPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            var EXPORTPOWER = $("input[tType=EXPORTPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            var UPLOADPOWER = $("input[tType=UPLOADPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            var OTHERPOWER = $("input[tType=OTHERPOWER][tId=" + cdxh + "]").is(':checked') ? "1" : "0";
                            if (CheckList.length == 0) {
                                CheckList = "[{xh:'',jsxh:'',cdxh:'"
                                    + cdxh + "',SAVEPOWER:'"
                                    + SAVEPOWER + "',UPDATEPOWER:'"
                                    + UPDATEPOWER + "',DELETEPOWER:'"
                                    + DELETEPOWER + "',PRINTPOWER:'"
                                    + PRINTPOWER + "',EXPORTPOWER:'"
                                    + EXPORTPOWER + "',UPLOADPOWER:'"
                                    + UPLOADPOWER + "',OTHERPOWER:'"
                                    + OTHERPOWER + "'}";
                            } else {
                                CheckList += ",{xh:'',jsxh:'',cdxh:'"
                                    + cdxh + "',SAVEPOWER:'"
                                    + SAVEPOWER + "',UPDATEPOWER:'"
                                    + UPDATEPOWER + "',DELETEPOWER:'"
                                    + DELETEPOWER + "',PRINTPOWER:'"
                                    + PRINTPOWER + "',EXPORTPOWER:'"
                                    + EXPORTPOWER + "',UPLOADPOWER:'"
                                    + UPLOADPOWER + "',OTHERPOWER:'"
                                    + OTHERPOWER + "'}";
                            }
                        }
                    });

                    if (CheckList.length > 0) {
                        CheckList += "]";
                    }
                    return CheckList;
                }

                function initMenuRoleTree() {
                    pdResourceSvr.post('@Url.Action("GetRoleMenus")/' + vm.search.JSBH + "?systemId=" + vm.search.SSXT)
                        .then(function (data) {
                            var dtItems = data; //转换为json对象
                            $("input[nodeId]").each(function () {
                                if ($(this).is(':checked')) {
                                    //$(this).attr("checked", false);
                                    $(this).removeAttr("checked");
                                }
                            });
                            for (var i = 0; i < dtItems.length; i++) {
                                $("input[nodeId=" + dtItems[i].CDXH + "]").attr("checked", true);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=SAVEPOWER]").attr("checked", dtItems[i].SAVEPOWER == "1" ? true : false);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=UPDATEPOWER]").attr("checked", dtItems[i].UPDATEPOWER == "1" ? true : false);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=DELETEPOWER]").attr("checked", dtItems[i].DELETEPOWER == "1" ? true : false);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=PRINTPOWER]").attr("checked", dtItems[i].PRINTPOWER == "1" ? true : false);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=EXPORTPOWER]").attr("checked", dtItems[i].EXPORTPOWER == "1" ? true : false);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=UPLOADPOWER]").attr("checked", dtItems[i].UPLOADPOWER == "1" ? true : false);
                                $("input[tId=" + dtItems[i].CDXH + "][tType=OTHERPOWER]").attr("checked", dtItems[i].OTHERPOWER == "1" ? true : false);
                            }
                            if (!(dtItems == null || dtItems.length == 0)) {
                                $("#xt_root").attr("checked", "checked");
                            }

                            $("#xt_root").change(function () {
                                var isCheck = $(this).is(':checked');
                                $("#divMenuTree input").each(function () {
                                    this.checked = isCheck;
                                });
                            });
                        })
                    }
            }]);
    </script>
    <script type="text/html" id="barDemo">
        <a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
        <a class="layui-btn layui-btn-xs layui-btn-normal" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
}
